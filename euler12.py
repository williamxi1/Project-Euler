# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
import math

def divisors(n):
    divisors = []
    for i in range(2, math.floor(n**0.5)+1):
        pow = 0
        while(n % i == 0):
            pow += 1
            n = n//i
        if(pow > 0):
            divisors.append([i,pow])
    if(n > 1):
        divisors.append([n, 1])
    return divisors

def numdivisors(divisors):
    tot = 1
    for i in range(len(divisors)):
        tot*= divisors[i][1]+1
    return tot

n = 1
found = False
while(found == False):
    if(n %2 == 0):
        numdiv = numdivisors(divisors(n//2))*numdivisors(divisors(n+1))
    else:
        numdiv = numdivisors(divisors(n))*numdivisors(divisors((n+1)//2))

    if(numdiv > 500):
        found = True
    else:
        n += 1

print( (n*(n+1))//2 )
